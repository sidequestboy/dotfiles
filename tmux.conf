# vi copypaste mode
set-window-option -g mode-keys vi
if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 4 \)'" 'bind-key -Tcopy-mode-vi v send -X begin-selection; bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 4\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'bind-key -t vi-copy v begin-selection; bind-key -t vi-copy y copy-selection'

# copy to system clipboard
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

bind - command-prompt -p "paste buffer send to" "paste-buffer -t %%"

# tmux window numbering
set -g base-index 1
set-option -g renumber-windows on

# status bar on top
set-option -g status-position top

# unintruding status bar colors
set -g status-style bg=default
set -g status-style fg=default

# hide status bar when there's only one window.
set-hook -g window-linked   "set-option -F status '#{?#{==:#{session_windows},1},off,on}'"
set-hook -g window-unlinked "set-option -F status '#{?#{==:#{session_windows},1},off,on}'"

# show hostname in status bar
set -g status-right "#h"

set -g default-terminal "screen-256color"

set -g exit-empty 0


# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

bind-key M choose-tree -Zw "join-pane -t '%%'"
bind-key C-m choose-tree -Zs "join-pane -t '%%'"

# Panes
# more intuitive split shortcuts
# split in the direction of the vi key
bind l split-window -h -c "#{pane_current_path}"
bind h split-window -hb -c "#{pane_current_path}"
bind j split-window -v -c "#{pane_current_path}"
bind k split-window -vb -c "#{pane_current_path}"

# Windows
# create in current pane's directory
bind c new-window -c "#{pane_current_path}"
# create in default ($HOME) directory
bind C new-window

# renumber sessions
set-hook -g session-closed  "run $HOME/.local/lib/tmux/renumber-sessions.sh"
set-hook -g session-created "run $HOME/.local/lib/tmux/renumber-sessions.sh"

# scroll 3 lines at a time in copy mode
bind -Tcopy-mode-vi WheelUpPane send -N3 -X scroll-up
bind -Tcopy-mode-vi WheelDownPane send -N3 -X scroll-down

# Watch background windows for activity
setw -g monitor-activity on
setw -g activity-action none

set -s escape-time 0

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# use mouse
set -g mouse on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
